#1. Write a program in Python to allow the error of syntax to be handled using exception handling.
#HINT: Use SyntaxError

Ans:
try:
    eval('a <> b')
except SyntaxError:
    print("Syntax Error")


#2. Write a program in Python to allow the user to open a file by using the argv module. If the
#entered name is incorrect throw an exception and ask them to enter the name again. Make sure
#to use read only mode.

Ans:
import sys
def file(filename):
    fh = open(sys.argv[1], 'r')
    fh.close()
    return filename


while True:
    filename = input(" Enter your filename: ")
    try:
        if filename == "myfile.txt":
            break
    except Exception as e:
        print("Entered name is not correct")
        continue


#3. Write a program to handle an error if the user entered a number more than four digits it should
#return “The length is too short/long !!! Please provide only four digits”

Ans:
def count():
    number = int(input("Enter a 4 digit number: "))
    if len(str(number)) == 4:
        print("Access Granted")
    else:
        raise Exception
try:
    count()
except Exception as e:
    print("The length is too short/Long!!! Please provide only four digits")


#4. Create a login page backend to ask users to enter the username and password. Make sure to
#ask for a Re-Type Password and if the password is incorrect give chance to enter it again but it
#should not be more than 3 times.

Ans:
print('Enter correct Username and Password to continue')
count = 0
while count < 3:
    username = input('Enter your username: ')
    password = input('Enter your password: ')
    if password =='Dstu76E' and username == 'admin':
        print('You are successfully logged in')
        break
    else:
        print('Incorrect Password or Username. Try again.')
        count += 1


#5. Go through the link provided below to understand finally and raise concept:
#https://www.programiz.com/python-programming/exception-handling

Ans:
 Finally exception : It is used for releasing external resources. It can be executed no matter if the condition is
 satisfied or not. It is an optional clause. The final clause guarantees that the activities like closing a file, GUI
 or disconnecting from a network are performed whether the program successfully ran or not.

 Raise exception: When errors occur at the run time, exceptions are raised at that time. We can manually raise
 exception using keyword raise.We can also know the reason of exception raising by passing values to the exception
 optionally.


#6. Read doc.txt file using Python File handling concept and return only the even length string from
#the file. Consider the content of doc.txt as given below:
#Hello I am a file
#Where you need to return the data string
#Which is of even length
#Make sure you return the content in The same link as it is present.

Ans:
f = open("doc1.txt", "r")
text = f.read()
#print(text)
lines = text.split("\n")
list1 = []
words = []
for ele in lines:
    words += ele.split(" ")

for ele in words:
    if len(ele) % 2 == 0:
        list1.append(ele)

# displaying results
print(list1)
f.close()

