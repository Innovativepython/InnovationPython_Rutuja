#1. Write a program that calculates and prints the value according to the given formula:
#Q= Square root of [(2*C*D)/H]
#Following are the fixed values of C and H:
#C is 50.
#H is 30.
# D is a variable whose values should be input to your program in a comma-separated sequence.

import math
C = 50
H = 30

D = input("Enter comma separated D values: ")
D = D.split(',')

result = []
for D in D:
    Q = round(math.sqrt(2 * C * float(D) / H))
    result.append(Q)

print(result)

#2. Define a class named Shape and its subclass Square. The Square class has an init function which
#takes length as argument. Both classes have an area function which can print the area of the shape
#where Shape’s area is 0 by default.

class Shape():
    def __init__(self):
        pass
    def area(self):
        return 0

class Square(Shape):
    def __init__(self, length):
        Shape.__init__(self)
        self.length = length

    def area(self):
        return self.length * self.length
s = Square(2)
print(s.area())


#3. Create a class to find three elements that sum to zero from a set of n real numbers
#Input array: [-25,-10,-7,-3,2,4,8,10]
#Expected output: [[-10,2,8],[-7,-3,10]]
output = []
class Sumzero:
    def findthreenum(x, n):
        for i in range(0, n - 2):

            for j in range(i + 1, n - 1):

                for k in range(j + 1, n):

                    if (x[i] + x[j] + x[k] == 0):
                        Trio = [x[i],x[j],x[k]]
                        output.append(Trio)

        return output
# x is input array
x =[-25,-10,-7,-3,2,4,8,10]
n = len(x)
print(Sumzero.findthreenum(x, n))


#4. Create a Time class and initialize it with hours and minutes.
#Create a method addTime which should take two Time objects and add them.
#E.g.- (2 hour and 50 min)+(1 hr and 20 min) is (4 hr and 10 min)
#Create another method displayTime which should print the time.
#Also create a method displayMinute which should display the total minutes in 
#the Time.
#E.g.- (1 hr 2 min) should display 62 minute.


class Time:
    def __init__(self, hours, minutes):
        self.hours = hours
        self.minutes = minutes

    def addTime(self, t1, t2):
        hours = t1.hours + t2.hours
        minutes = t1.minutes + t2.minutes
        hours += minutes // 60
        minutes %= 60
        return str(hours) + ' ' + 'hr ' + '' + str(minutes) + ' ' + 'minutes'

    def displayTime(self):
        return str(self.hours) + ' ' + 'hr' + ' ' + str(self.minutes) + ' ' + 'minutes'

    def displayMinute(self, hours, minutes):
        self.hours = hours * 60
        self.minutes = minutes
        total_minutes = self.hours + self.minutes
        return total_minutes

obj = Time(2,30)
t1=Time(2,50)
t2=Time(1,20)
print("Added Time: ", obj.addTime(t1,t2))
print("Display Time: ", obj.displayTime())
print("Display Minutes: ", obj.displayMinute(1, 2))


#5. Write a Person class with an instance variable “age” and a constructor that takes an integer as a
#parameter. The constructor must assign the integer value to the age variable after confirming the
#argument passed is not negative; if a negative argument is passed then the constructor should set
#age to 0 and print “Age is not valid, setting age to 0”. In addition, you must write the following instance
#methods:
#yearPasses() should increase age by the integer value that you are passing inside the function.
#amIOld() should perform the following conditional actions:
# If age is between 0 and <13, print “You are young”.
#If age is >=13 and <=19 , print “You are a teenager”.
#Otherwise, print “You are old”.
#Sample Input for amIOld():
#-1
#4
#10
#16
#18
#64
#38
#Expected Output for amIOld():
#Age is not valid, setting age to 0.
#You are young.
#You are young.
#You are a teenager.
#You are a teenager.
#You are old.
#You are old.
#Consider the age variable to be set to 38 then:
#Sample Input for yearPasses(): 4
#Expected Output for yearPasses(): 42

class Person:
    def __init__(self, age):
        self.age = age
        if self.age < 0:
            print("Age is not valid, setting age to 0")

    def YearPasses(self, addyear):
        self.addyear = addyear
        YearPassed = self.age + self.addyear
        return YearPassed

    def amIOld(self):
        if self.age <= 0 and self.age < 13:
            return "You are young"
        elif self.age >= 13 and self.age <= 19:
            return "You are teenager"
        else:
            return "You are old"
age = int(input("Enter your age :"))
object = Person(age)
print(object.amIOld())
addyear = int(input("Years passed :")) # addyear is the integer value you are passing in function
print(object.YearPasses(addyear))

